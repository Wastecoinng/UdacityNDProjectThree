# ---

# - name: "configuration play." 
#   hosts: web
#   user: ubuntu
#   gather_facts: false
#   vars:
#     - ansible_python_interpreter: /usr/bin/python3
#     - ansible_host_key_checking: false
#     - ansible_stdout_callback: yaml
#   environment:
#     NODE_ENV: "{{ lookup('env','NODE_ENV') }}"
#     VERSION: "{{ lookup('env','VERSION') }}"
#     ENVIRONMENT: "{{ lookup('env','ENVIRONMENT') }}" 
#     TYPEORM_CONNECTION: "{{ lookup('env','TYPEORM_CONNECTION') }}"
#     TYPEORM_HOST: "{{ lookup('env','TYPEORM_HOST') }}"
#     TYPEORM_USERNAME: "{{ lookup('env','TYPEORM_USERNAME') }}"
#     TYPEORM_PASSWORD: "{{ lookup('env','TYPEORM_PASSWORD') }}"
#     TYPEORM_DATABASE: "{{ lookup('env','TYPEORM_DATABASE') }}"
#     TYPEORM_PORT: "{{ lookup('env','TYPEORM_PORT') }}"
#     TYPEORM_ENTITIES: "{{ lookup('env','TYPEORM_ENTITIES') }}"
  
#   pre_tasks:
#     - name: "wait 600 seconds for target connection to become reachable/usable."
#       wait_for_connection:
#         timeout: 600

#     - name: "install python for Ansible."
#       become: true
#       raw: test -e /usr/bin/python3 || (apt -y update && apt install -y python3)
#       changed_when: false
#   roles:
#     - deploy

---

- name: "configuration play." 
  hosts: web
  user: ubuntu
  gather_facts: false
  vars:
    - ansible_python_interpreter: /usr/bin/python3
    - ansible_host_key_checking: false
    - ansible_stdout_callback: yaml
    - NODE_ENV: production
    - ENVIRONMENT: production
    - TYPEORM_CONNECTION: postgres
    - TYPEORM_ENTITIES: ./src/modules/domain/**/*.entity.ts
    - TYPEORM_MIGRATIONS: ./src/migrations/*.ts
    - TYPEORM_MIGRATIONS_DIR: ./src/migrations
    - TYPEORM_HOST: "{{ lookup('env','TYPEORM_HOST') }}"
    - TYPEORM_PORT: "{{ lookup('env','TYPEORM_PORT') }}"
    - TYPEORM_USERNAME: "{{ lookup('env','TYPEORM_USERNAME') }}"
    - TYPEORM_PASSWORD: "{{ lookup('env','TYPEORM_PASSWORD') }}"
    - TYPEORM_DATABASE: "{{ lookup('env','TYPEORM_DATABASE') }}"
  roles:
    - role: weareinteractive.environment
      become: true
    # - role: configure-server
    #   become: true
    - role: deploy
      become: true